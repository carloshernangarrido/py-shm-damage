# import sys
# print(sys.path)
# import numpy as np
import matplotlib.pyplot as plt
import numpy as np
from shmdamage import hsmr

# Press the green button in the gutter to run the script.
if __name__ == '__main__':
    # curvature of damaged structure in the ROI
    c = np.array([-2.90605835e-05, -2.90605835e-05, -1.39548861e-05, 4.57361045e-06,
                  3.02031938e-05, -3.18233933e-05, 4.07652430e-06, 1.66006871e-05,
                  2.83552664e-05, -3.93365184e-05, 1.51521764e-05, -5.37098821e-06,
                  2.95286427e-05, 8.61515505e-05, -7.46626888e-05, -2.28953045e-05,
                  1.24985480e-04, -3.99856447e-05, -1.71476463e-05, 7.14835394e-05,
                  1.61173086e-05, -4.02361794e-05, 6.70187275e-05, 2.65937929e-05,
                  -2.89593919e-06, 3.35786974e-05, 3.78162892e-05, 2.11175175e-05,
                  -8.58924333e-06, 1.56081914e-05, -1.68563938e-05, 1.03978455e-04,
                  5.06875258e-05, 9.99249713e-05, -8.91869468e-05, 3.02507531e-04,
                  -4.71655454e-05, 7.75966083e-05, 1.59263318e-05, 4.48584647e-05,
                  3.97445113e-05, 7.22355526e-05, -1.69202725e-05, 1.25899200e-04,
                  1.66315895e-04, 7.91257670e-05, 6.26710756e-06, 8.94880248e-05,
                  6.49831036e-06, 3.32765543e-05, 1.16490872e-04, 1.22034561e-04,
                  3.81689450e-04, 1.09450506e-04, 1.20743607e-04, 2.78867550e-05,
                  8.21513305e-05, 5.72616872e-05, 3.61274482e-05, 3.61274482e-05])
    # load in damaged structure
    q = np.array([-302.57007546, -292.38905629, -291.05886206, -284.01918961,
                  -271.5218206, -268.6757109, -258.72568961, -256.77288977,
                  -251.72031948, -244.95675023, -238.12787266, -233.72572248,
                  -229.03164892, -219.72933039, -220.55828407, -210.92958817,
                  -198.43449718, -196.3862859, -195.48674279, -185.28789319,
                  -181.18383464, -171.71737107, -167.57434895, -164.32897642,
                  -156.16543282, -151.12072256, -149.02570344, -144.67877221,
                  -131.02496082, -123.72410619, -123.26800886, -116.53942972,
                  -117.60414316, -116.83206202, -111.1812397, -106.42697413,
                  -101.95346048, -96.03721883, -88.08954592, -87.21871226,
                  -85.23278352, -81.13868827, -78.00720602, -71.59580701,
                  -70.24267959, -62.86378763, -63.64592776, -60.77409882,
                  -52.40246348, -52.9568001, -50.82656083, -46.24035941,
                  -50.90602568, -46.17845812, -46.92986553, -40.70950147,
                  -37.366559, -38.18055971, -38.08387943, -37.51037804])
    fig = []
    for i, norm in enumerate([0, 1, 2]):
        c_h, m_, m, res_x = hsmr.synthesis(c=c, q=q, dyn_stiff_initial_guess=1, norm=norm,
                                           m_0_min=-1000, m_0_max=-990,
                                           s_0_min=-100, s_0_max=-100)
        print(res_x)
        fig.append(plt.figure())
        plt.plot(c, 'b')
        plt.plot(c_h, 'r')
    plt.show()
